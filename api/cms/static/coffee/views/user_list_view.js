// Generated by CoffeeScript 1.6.3
(function() {
  var root, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  app.views.UserListView = (function(_super) {
    __extends(UserListView, _super);

    function UserListView() {
      _ref = UserListView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    UserListView.prototype.template = app.templates.user_table;

    UserListView.prototype.tagName = 'div';

    UserListView.prototype.className = 'user-list';

    UserListView.prototype.render = function() {
      var user_view_els, user_views;
      this.$el.html(_.template(this.template, {
        headers: this.collection.headers,
        selected: this.collection.by
      }));
      user_views = [];
      this.collection.each(function(user) {
        var user_view;
        user_view = new app.views.UserView({
          model: user
        });
        return user_views.push(user_view.render());
      });
      user_view_els = _.pluck(user_views, 'el');
      this.$el.find('tbody').html(user_view_els);
      return this;
    };

    UserListView.prototype.events = {
      "click th": "sort_reviews"
    };

    UserListView.prototype.initialize = function() {
      this.listenTo(this.collection, 'add', this.render);
      this.listenTo(this.collection, 'sort', this.render);
      return this.listenTo(root.create_vent, 'user:create', this.addOne);
    };

    UserListView.prototype.addOne = function(data) {
      var user;
      user = new app.models.User(data);
      this.collection.add(user);
      return this;
    };

    UserListView.prototype.sort_reviews = function(e) {
      e.preventDefault();
      this.collection.by = $(e.target).attr('data-by');
      return this.collection.sort();
    };

    return UserListView;

  })(Backbone.View);

}).call(this);
