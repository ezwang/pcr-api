// Generated by CoffeeScript 1.6.3
(function() {
  var root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  root.app = root.app ? root.app : {
    models: {},
    collections: {},
    views: {},
    templates: {}
  };

  (function() {
    var _sync;
    _sync = Backbone.sync;
    return Backbone.sync = function(method, model, options) {
      options.beforeSend = function(xhr) {
        var token;
        token = $('meta[name="csrf-token"]').attr("content");
        return xhr.setRequestHeader("X-CSRFToken", token);
      };
      return _sync(method, model, options);
    };
  })();

  $(function() {
    var _this = this;
    return $.ajax({
      url: "/cms/initial",
      success: function(data) {
        var c, _i, _len, _ref;
        data = JSON.parse(data);
        _ref = data.courses;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          c = _ref[_i];
          console.log(c.user);
        }
        root.courses = new app.collections.Courses(data.courses);
        root.users = new app.collections.Users(data.users);
        console.log(root.courses);
        String.prototype.capitalize = function() {
          return this.charAt(0).toUpperCase() + this.slice(1);
        };
        root.create_vent = _.extend({}, Backbone.Events);
        root.search_vent = _.extend({}, Backbone.Events);
        root.match_vent = _.extend({}, Backbone.Events);
        root.UserList = new app.views.UserListView({
          collection: users
        });
        root.CourseList = new app.views.CourseListView({
          collection: courses
        });
        root.SearchCourses = new app.views.SearchView;
        root.UserNew = new app.views.UserNewView;
        root.Stat = new app.views.StatView;
        $("#users-table-wrapper").html(UserList.render().el);
        $("#users-table-wrapper").append(UserNew.render().el);
        $("#courses-table-wrapper").html(CourseList.render().el);
        $("#search-wrapper").html(SearchCourses.render().el);
        return $("#stat-wrapper").html(Stat.render().el);
      }
    });
  });

}).call(this);
